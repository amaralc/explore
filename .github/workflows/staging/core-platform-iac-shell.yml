# References:

# - https://github.com/guysenpai/nx-workspace-core
# - https://medium.com/@guysenpai89/nx-monorepo-publish-libraries-to-github-packages-with-github-actions-semantic-release-970883f2786a
# - https://medium.com/@guysenpai89/nx-monorepo-publish-your-libraries-to-github-packages-with-github-actions-semantic-release-5f2c3fdffaa0
# - https://medium.com/@guysenpai89/nx-monorepo-publish-your-libraries-to-github-packages-with-github-actions-semantic-release-fa9822467b24

name: core-platform-iac-shell-staging

on:
  workflow_run:
    workflows: ["researchers-peers-svc-staging"]
    types:
      - completed

env:
  HUSKY: 0
  DOCKER_IMAGE_NAME: researchers-peers # Must match configuration in main.tf for that app

jobs:
  researchers-peers-svc-staging:
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' || (github.event_name == 'push' && !github.event.workflow_run) }}
    defaults:
      run:
        working-directory: ${{ github.workspace }}

    steps:
      - name: Checkout staging branch
        uses: actions/checkout@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          token: ${{ secrets.GH_ACTIONS_PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Save GCP credentials to file
        run: |
          echo '${{ secrets.GCP_STAGING_PEERLAB_TF_SERVICE_ACCOUNT }}' > apps/core/platform/iac-shell/staging/credentials.json

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: ${{ secrets.GCP_STAGING_PEERLAB_TF_SERVICE_ACCOUNT }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.9

      - name: Terraform init
        run: |
          echo "Running terraform init..."
          echo ""
          terraform init
        working-directory: apps/core/platform/iac-shell/staging

      - name: Terraform validate
        run: |
          echo "Running terraform validate..."
          terraform validate
        working-directory: apps/core/platform/iac-shell/staging

      - name: Terraform Plan
        run: |
          echo "Running terraform plan..."
          terraform plan -out=tfplan -var "database_url=${{ secrets.DATABASE_URL }}" -var "direct_url=${{ secrets.DIRECT_URL }}" -var "project_id=${{ secrets.GCP_PROJECT_ID }}" -var  "region=${{ secrets.GCP_REGION }}" -var "commit_hash=${{ github.sha }}"
        working-directory: apps/core/platform/iac-shell/staging
        env:
          GCP_ENVIRONMENT: ${{ secrets.GCP_ENVIRONMENT }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: ${{ secrets.GCP_REGION }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}

      - name: Terraform Apply
        run: |
          echo "Running terraform apply..."
          terraform apply -auto-approve tfplan
        working-directory: apps/core/platform/iac-shell/staging
        env:
          GCP_ENVIRONMENT: ${{ secrets.GCP_ENVIRONMENT }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: ${{ secrets.GCP_REGION }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
